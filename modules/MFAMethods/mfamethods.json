{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "SEEN-MFAMethods",
            "type": "String"
        },
        "ConfigResourceId": {
            "defaultValue": "/subscriptions/<subscriptionid>/resourceGroups/<rgname>/providers/Microsoft.Logic/workflows/SEEN-Config",
            "type": "String"
        },
        "EmailNotificationResourceId": {
            "defaultValue": "/subscriptions/<subscriptionid>/resourceGroups/<rgname>/providers/Microsoft.Logic/workflows/SEEN-SendNotification",
            "type": "String"
        },
        "TablesConnectionResourceId": {
            "defaultValue": "/subscriptions/<subscriptionid>/resourceGroups/<rgname>/providers/Microsoft.Web/connections/azuretables",
            "type": "String"
        },
        "StorageAccountName": {
            "defaultValue": "",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 15
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 15
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Config": {
                            "actions": {
                                "Current_time": {
                                    "runAfter": {},
                                    "type": "Expression",
                                    "kind": "CurrentTime",
                                    "inputs": {}
                                },
                                "Get_entity_Tracker": {
                                    "runAfter": {
                                        "Current_time": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuretables']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "[concat('/v2/storageAccounts/@{encodeURIComponent(encodeURIComponent(''', parameters('StorageAccountName'), '''))}/tables/@{encodeURIComponent(''trackers'')}/entities(PartitionKey=''@{encodeURIComponent(''seen'')}'',RowKey=''@{encodeURIComponent(''MFAMethods'')}'')')]",
                                        "queries": {
                                            "$select": "Tracker"
                                        }
                                    }
                                },
                                "SEEN-Config": {
                                    "runAfter": {
                                        "Current_time": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": {
                                            "mode": "on",
                                            "module": "mfa",
                                            "testEmail": "piaudonn@sentinellab.xyz"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[parameters('ConfigResourceId')]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "Notification": {
                            "actions": {
                                "For_each_record": {
                                    "foreach": "@body('Log_Analytics_Call')?['tables']?[0]?['rows']",
                                    "actions": {
                                        "AAD_Call": {
                                            "runAfter": {
                                                "Debug": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "headers": {
                                                    "ConsistencyLevel": "eventual"
                                                },
                                                "method": "GET",
                                                "uri": "https://graph.microsoft.com/v1.0/users/@{item()[1]}/?$expand=manager($levels=1;$select=mail)"
                                            }
                                        },
                                        "AAD_Error": {
                                            "runAfter": {
                                                "AAD_Call": [
                                                    "Failed"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@body('AAD_Call')"
                                        },
                                        "Create_HTML_Activity_table": {
                                            "runAfter": {
                                                "Debug": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Table",
                                            "inputs": {
                                                "columns": [
                                                    {
                                                        "header": "Time (UTC)",
                                                        "value": "@concat('ðŸ“† ',item()['TimeGenerated'])"
                                                    },
                                                    {
                                                        "header": "Activity",
                                                        "value": "@item()['Type']"
                                                    }
                                                ],
                                                "format": "HTML",
                                                "from": "@json(item()[2])"
                                            }
                                        },
                                        "Debug": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@item()"
                                        },
                                        "Email_Body": {
                                            "runAfter": {
                                                "AAD_Call": [
                                                    "Succeeded"
                                                ],
                                                "Create_HTML_Activity_table": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@replace(replace(body('SEEN-Config')['template'],'{UserFirstName}',coalesce(body('AAD_Call')['givenName'],body('AAD_Call')['displayName'])),'{MFAChanges}',body('Create_HTML_Activity_table'))"
                                        },
                                        "SEEN-SendNotification": {
                                            "runAfter": {
                                                "Email_Body": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Workflow",
                                            "inputs": {
                                                "body": {
                                                    "bcc": "@{if(equals(body('SEEN-Config')?['recipient'],''),body('SEEN-Config')['bcc'],null)}",
                                                    "body": "@{outputs('Email_Body')}",
                                                    "cc": "@{if(equals(body('SEEN-Config')?['recipient'],''),if(equals(body('SEEN-Config')['ccManager'],true),body('AAD_Call')?['manager']?['mail'],null),null)}",
                                                    "importance": "high",
                                                    "mailFrom": "@{body('SEEN-Config')['mailFrom']}",
                                                    "replyTo": "@{body('SEEN-Config')['replyTo']}",
                                                    "saveToSentItems": "@body('SEEN-Config')['saveToSentItems']",
                                                    "subject": "@{body('SEEN-Config')['subject']}",
                                                    "to": "@{if(equals(body('SEEN-Config')?['recipient'],''),body('AAD_Call')['mail'],body('SEEN-Config')?['recipient'])}",
                                                    "tracking": "mfa"
                                                },
                                                "host": {
                                                    "triggerName": "manual",
                                                    "workflow": {
                                                        "id": "[parameters('EmailNotificationResourceId')]"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "Query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Query": {
                            "actions": {
                                "KQL_Query": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": "let IncludeGuests = @{body('SEEN-Config')['includeGuests']};\nlet StartTime = todatetime(\"@{body('Get_entity_Tracker')['Tracker']}\") ;\nlet EndTime = todatetime(\"@{body('Current_time')}\") ;\nlet TimeZone = \"@{body('SEEN-Config')['timeZone']}\" ;\nAuditLogs\n| where ingestion_time() between (StartTime..EndTime)\n| where OperationName in (\"User registered security info\",\"User deleted security info\")\n| where Result == \"success\"\n| extend UserPrincipalName = tostring(TargetResources[0].userPrincipalName)\n| extend UserId = tostring(TargetResources[0].id)\n| extend IsGuest = iif(UserPrincipalName contains \"#EXT#\", true, false)\n| where IncludeGuests == true or IsGuest == false\n| extend Details = bag_pack(\"TimeGenerated\", format_datetime(datetime_utc_to_local(TimeGenerated,TimeZone), 'yyyy-MM-dd HH:mm:ss'), \"Type\", ResultDescription)\n| project UserPrincipalName, UserId, Details\n| summarize Summary = make_set(Details) by UserPrincipalName, UserId"
                                },
                                "Log_Analytics_Call": {
                                    "runAfter": {
                                        "KQL_Query": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://api.loganalytics.io",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "body": {
                                            "query": "@{outputs('KQL_Query')}",
                                            "timespan": "P1D"
                                        },
                                        "method": "POST",
                                        "uri": "https://api.loganalytics.io/v1/workspaces/6ba2759c-1c00-4aa0-88e8-138379ea383c/query"
                                    }
                                }
                            },
                            "runAfter": {
                                "Config": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Update_Entity_Tracker": {
                            "runAfter": {
                                "Notification": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Tracker": "@{body('Current_time')}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuretables']['connectionId']"
                                    }
                                },
                                "method": "put",
                                "path": "[concat('/v2/storageAccounts/@{encodeURIComponent(encodeURIComponent(''', parameters('StorageAccountName'), '''))}/tables/@{encodeURIComponent(''trackers'')}/entities(PartitionKey=''@{encodeURIComponent(''seen'')}'',RowKey=''@{encodeURIComponent(''MFAMethods'')}'')')]"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuretables": {
                                "connectionId": "[parameters('TablesConnectionResourceId')]",
                                "connectionName": "azuretables",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuretables')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}